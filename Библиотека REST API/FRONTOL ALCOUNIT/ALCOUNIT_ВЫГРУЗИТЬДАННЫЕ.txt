/*
IF ( ПУСТО( _ИМЯТАБЛИЦЫ ) )
{
	СООБЩЕНИЕ("Не определена таблица товаров для выгрузки");
	RETURN false;
}
*/
//признак необходимости замены алкокодов в товарах при выгрузке привязок алкокодов к товарам. true - заменять, false - добавлять
_ЗАМЕНЯТЬАЛКОКОДЫВТОВАРАХ = false;
РежимВыгрузки = 0;
//если код оборудования не определен, то инициализируем переменную с пустым значением
IF ( TYPE ( "КОДОБОРУДОВАНИЯ" ) == "U" )
	КОДОБОРУДОВАНИЯ = RESTAPI.КОДОБОРУДОВАНИЯ();

ИМЯОБОРУДОВАНИЯ = "";
ФИРМА = "";
СКЛАД = "";
ЛОГИН = "";
ПАРОЛЬ = "";
СЕРИЙНЫЙНОМЕР = "";
//если задан код оборудования, то определим из оборудования фирму, склад, наименование, серийный номер, логин, пароль
IF ( !ПУСТО( КОДОБОРУДОВАНИЯ ) )
{
	ДОБАВИТЬКОНТЕКСТ("SELECT name, firm, sklad, serialnumber, login, password, saldotype  FROM sprequipment WHERE code= '" + КОДОБОРУДОВАНИЯ + "'", "ДанныеОборудования", 1 );
	ИМЯОБОРУДОВАНИЯ = ДанныеОборудования.name;
	ФИРМА = ДанныеОборудования.firm;
	СКЛАД = ДанныеОборудования.sklad;
	ЛОГИН = ДанныеОборудования.login;
	ПАРОЛЬ = ДанныеОборудования.password;
	СЕРИЙНЫЙНОМЕР = ДанныеОборудования.serialnumber;
	РежимВыгрузки = ДанныеОборудования.saldotype;
	//если в карточке оборудования выбран режим перезаписи остатков, то будем перезаписывать алкокоды в товарах при выгрузке
	_ЗАМЕНЯТЬАЛКОКОДЫВТОВАРАХ = РежимВыгрузки == 1; 
}

АдресСервера = "";
//АдресСервера = "https://localhost:8443";
//определим адрес сервера Алкоюнит, а так же логин и пароль
//сперва будем брать адрес из серийного номера карточки оборудования
IF ( !ПУСТО( СЕРИЙНЫЙНОМЕР ) )
	АдресСервера = СЕРИЙНЫЙНОМЕР;

//если не задан в карточке оборудования или код оборудования не определен, то берем значение из константы _АЛКОЮНИТАДРЕССЕРВЕРА
IF ( ПУСТО( АдресСервера ) )
	АдресСервера = ПЕРЕМЕННАЯ( "_АЛКОЮНИТАДРЕССЕРВЕРА", "" );

//если не определен адрес и в константе, то берем локальный адрес
IF ( ПУСТО( АдресСервера ) )	
	АдресСервера = "https://localhost:8443"; //иначе обращаемся к локальному ПК
	
//определим логин и пароль из констант, если не задано в оборудовании. Если нет константы, то используем стандартное имя пользователя admin и пароль moo
IF ( ПУСТО(ЛОГИН) )
	ЛОГИН = ПЕРЕМЕННАЯ( "_АЛКОЮНИТЛОГИН", "admin" );
	
IF ( ПУСТО(ПАРОЛЬ) )
	ПАРОЛЬ = ПЕРЕМЕННАЯ( "_АЛКОЮНИТПАРОЛЬ", "moo" );

//товары и алкокоды выгружаем только для полного режима
//Если режим выгрузки остатоков НЕ РАВЕН варианту "Не выгружать остатки", то будем выгружать данные по товарам и алкокодам
IF ( РежимВыгрузки <> 0 )
{
	IF ( !ПУСТО( _ИМЯТАБЛИЦЫ ) )
		ДОБАВИТЬКОНТЕКСТ( "SELECT sprnn.maincode, sprnn.ed, sprnn.nn, sprnn.name, dbo.fn_getbarcodes( sprnn.nn ) AS barcodes, sprnn.code AS Артикул, dbo.fn_alcotype( sprnn.nnvid ) AS ВидАлкоголя, sprnn.d_litr AS Объем, sprnn.edd_litr AS ЕдиницаОбъема, sprnn.weight AS Вес,
		sprnn.a_proc AS Крепость, dbo.fn_getalcocodes( sprnn.nn ) AS alcocodes, sprnn.importer AS Производитель, sprclient.shortname AS ПроизводительИмя, sprclient.inn AS ПроизводительИНН, sprclient.kpp AS ПроизводительКПП
						   FROM "  + _ИМЯТАБЛИЦЫ + " temp
						   INNER JOIN sprnn ON temp.nn = sprnn.nn
						   LEFT OUTER JOIN sprclient sprclient ON sprclient.code = sprnn.importer
						   WHERE dbo.fn_alcotype( sprnn.nnvid ) > 0", "СписокТоваров" );
	ELSE IF ( !ПУСТО( КОДДОКУМЕНТА ) AND ПУСТО( СПИСОКДОКУМЕНТОВ ) )
		ДОБАВИТЬКОНТЕКСТ( "SELECT DISTINCT sprnn.maincode, sprnn.ed, sprnn.nn, sprnn.name, dbo.fn_getbarcodes( sprnn.nn ) AS barcodes, sprnn.code AS Артикул, dbo.fn_alcotype( sprnn.nnvid ) AS ВидАлкоголя, sprnn.d_litr AS Объем, sprnn.edd_litr AS ЕдиницаОбъема, sprnn.weight AS Вес,
		sprnn.a_proc AS Крепость, dbo.fn_getalcocodes( sprnn.nn ) AS alcocodes, sprnn.importer AS Производитель, sprclient.shortname AS ПроизводительИмя, sprclient.inn AS ПроизводительИНН, sprclient.kpp AS ПроизводительКПП
						   FROM spec"  + КОДДОКУМЕНТА + " spec
						   INNER JOIN sprnn ON spec.nn = sprnn.nn
						   LEFT OUTER JOIN sprclient sprclient ON sprclient.code = sprnn.importer
						   WHERE spec.ic = " + ИДДОКУМЕНТА + " AND dbo.fn_alcotype( sprnn.nnvid ) > 0", "СписокТоваров" );
	ELSE IF ( !ПУСТО( СПИСОКДОКУМЕНТОВ ) )
		ДОБАВИТЬКОНТЕКСТ( "SELECT DISTINCT sprnn.maincode, sprnn.ed, sprnn.nn, sprnn.name, dbo.fn_getbarcodes( sprnn.nn ) AS barcodes, sprnn.code AS Артикул, dbo.fn_alcotype( sprnn.nnvid ) AS ВидАлкоголя, sprnn.d_litr AS Объем, sprnn.edd_litr AS ЕдиницаОбъема, sprnn.weight AS Вес,
		sprnn.a_proc AS Крепость, dbo.fn_getalcocodes( sprnn.nn ) AS alcocodes, sprnn.importer AS Производитель, sprclient.shortname AS ПроизводительИмя, sprclient.inn AS ПроизводительИНН, sprclient.kpp AS ПроизводительКПП
						   FROM spec000 spec
						   INNER JOIN " + СПИСОКДОКУМЕНТОВ + " temp ON temp.code = spec.code AND temp.ic = spec.ic
						   INNER JOIN sprnn ON spec.nn = sprnn.nn
						   LEFT OUTER JOIN sprclient sprclient ON sprclient.code = sprnn.importer
						   WHERE dbo.fn_alcotype( sprnn.nnvid ) > 0", "СписокТоваров" );
							
	//1 - ВЫГРУЗКА ТОВАРОВ

	ТекстЗапроса = "";
	IF (КОЛИЧЕСТВОСТРОК("СписокТоваров") > 0 )
	{
		ТекстЗапроса += "{";
		ТекстЗапроса += """products"": [";
	}
		
	ВЫБРАТЬКОНТЕКСТ("СписокТоваров");
	ПЕРЕЙТИВНАЧАЛО("СписокТоваров");
	WHILE (!КОНЕЦКОНТЕКСТА("СписокТоваров"))
	{
		mAlco			= VAL( СписокТоваров.ВидАлкоголя ) == 1;
		ПивнаяПродукция	= VAL( СписокТоваров.ВидАлкоголя ) == 2;

		ТекстЗапросаТовар = "{";
		ТекстЗапросаТовар += ДАННЫЕ_JSON("id", СписокТоваров.maincode) + ",";
		ТекстЗапросаТовар += ДАННЫЕ_JSON("name", СписокТоваров.name) + ",";
		ТекстЗапросаТовар += ДАННЫЕ_JSON("is_excise", mAlco) + ",";
		ТекстЗапросаТовар += """barcodes"": [""" + STRTRAN(СписокТоваров.barcodes,",",""",""") + """]";
		ТекстЗапросаТовар += "}";
			
		ТекстЗапроса += ЕСЛИ(ПРАВСИМВ(ТекстЗапроса, 1)=="}",",","") + ТекстЗапросаТовар;
		
		ПРОПУСТИТЬ( 1, "СписокТоваров" );
	}
	IF (КОЛИЧЕСТВОСТРОК("СписокТоваров") > 0 )
	{
		ТекстЗапроса += "]";
		ТекстЗапроса += "}";
	}

	//отправим запрос с товарами, если он не пустой
	IF (!ПУСТО(ТекстЗапроса))
	{
		ТОКЕН = RESTAPI.ALCOUNIT_Авторизация( АдресСервера, ЛОГИН, ПАРОЛЬ, КОДОБОРУДОВАНИЯ );
		Ответ = RESTAPI.ALCOUNIT_POSTЗАПРОС( АдресСервера, "/products", ТекстЗапроса, ТОКЕН, "" );
		ТекстЗапроса = "";
		//IF (!ПУСТО(Ответ))
		//	СООБЩЕНИЕ("Ответ сервера Alcounit:" + CHR(13) + CHR(10) + Ответ);
	}

	//2 - ВЫГРУЗКА АЛКОКОДОВ ТОВАРОВ
	//пройдемся еще раз по контексту и выгрузим связи товаров с алкокодами
	ТекстЗапроса = "";
	IF (КОЛИЧЕСТВОСТРОК("СписокТоваров") > 0 )
	{
		ТекстЗапроса += "{";
		ТекстЗапроса += """products"": [";
	}

	ВЫБРАТЬКОНТЕКСТ("СписокТоваров");
	ПЕРЕЙТИВНАЧАЛО("СписокТоваров");
	WHILE (!КОНЕЦКОНТЕКСТА("СписокТоваров"))
	{
		ТекстЗапросаТовар = "{";
		ТекстЗапросаТовар += ДАННЫЕ_JSON("id", СписокТоваров.maincode) + ",";
		ТекстЗапросаТовар += """alc_codes"": [""" + STRTRAN(СписокТоваров.alcocodes,",",""",""") + """]";
		ТекстЗапросаТовар += "}";
			
		ТекстЗапроса += ЕСЛИ(ПРАВСИМВ(ТекстЗапроса, 1)=="}",",","") + ТекстЗапросаТовар;
		
		ПРОПУСТИТЬ( 1, "СписокТоваров" );
	}
	IF (КОЛИЧЕСТВОСТРОК("СписокТоваров") > 0 )
	{
		ТекстЗапроса += "]";
		ТекстЗапроса += "}";
	}

	//отправим запрос с алкокодами, если он не пустой
	IF (!ПУСТО(ТекстЗапроса))
	{
		ТОКЕН = RESTAPI.ALCOUNIT_Авторизация( АдресСервера, ЛОГИН, ПАРОЛЬ, КОДОБОРУДОВАНИЯ );
		IF ( _ЗАМЕНЯТЬАЛКОКОДЫВТОВАРАХ == false )
			Ответ = RESTAPI.ALCOUNIT_POSTЗАПРОС(АдресСервера, "/product_alc_code", ТекстЗапроса, ТОКЕН, "");
		ELSE
			Ответ = RESTAPI.ALCOUNIT_PUTЗАПРОС(АдресСервера, "/product_alc_code", ТекстЗапроса, ТОКЕН, "");
			
		ТекстЗапроса = "";
		//IF (!ПУСТО(Ответ))
		//	СООБЩЕНИЕ("Ответ сервера Alcounit:" + CHR(13) + CHR(10) + Ответ);
	}
	УДАЛИТЬКОНТЕКСТ("СписокТоваров");
}
//3 - ВЫГРУЗКА АЛКОМАРОК ИЗ ДОКУМЕНТА
//алкомарки выгружаем только для строгого и нестрогого режима, т.е. когда режим выгрузки остатков установлен на "Не выгружать остатки"
IF ( РежимВыгрузки == 0 )
{
	ВыгруженоДокументов = 0;
	//Выгрузка документов
	IF ( !ПУСТО( КОДДОКУМЕНТА ) OR !ПУСТО( СПИСОКДОКУМЕНТОВ ) ) 
	{
		IF ( !ПУСТО( КОДДОКУМЕНТА ) AND !ПУСТО( ИДДОКУМЕНТА ) )
			ДОБАВИТЬКОНТЕКСТ( "SELECT DB_NAME( ) AS dbase, '" + КОДДОКУМЕНТА + "' AS code, " + ИДДОКУМЕНТА + " AS ic", "ВыгружаемыеДокументы", 1 );			
		ELSE IF ( !ПУСТО( СПИСОКДОКУМЕНТОВ ) )
		{
			ДОБАВИТЬКОНТЕКСТ( "SELECT dbase, code, ic FROM " + СПИСОКДОКУМЕНТОВ, "ВыгружаемыеДокументы", 1 );	
			//очищаем список документов, чтобы не выгрузить повторно один и тот же список несколько раз
			СПИСОКДОКУМЕНТОВ = "";
		}	
			
		ВЫБРАТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
		КоличествоДокументовОбщее = КОЛИЧЕСТВОСТРОК("ВыгружаемыеДокументы");
		КоличествоДокументов = 0;
		ИНДИКАТОР("Формирование списка документов для выгрузки", КоличествоДокументовОбщее);
		ПЕРЕЙТИВНАЧАЛО( "ВыгружаемыеДокументы" );	
		WHILE ( !КОНЕЦКОНТЕКСТА( "ВыгружаемыеДокументы" ) )
		{
			ОписаниеДокумента = ЗАПРОС("SELECT dbo.fn_getdocdescription('" + ВыгружаемыеДокументы.code + "'," + ВыгружаемыеДокументы.ic + ")");
			IF ( !ВСПИСКЕ( ВыгружаемыеДокументы.code, "001", "002", "003", "008", "045", "046" ) )
			{
				СООБЩЕНИЕ( "Документ: """ + ОписаниеДокумента + """ не подлежит выгрузке в AlcoUnit. Выгрузка документа произведена не будет", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
				ПРОПУСТИТЬ( 1, "ВыгружаемыеДокументы" );
				CONTINUE;				
			}
			//индикатор
			КоличествоДокументов++;
			Индикатор( КоличествоДокументов, " Выгрузка документа ( " + КоличествоДокументов + " из " + КоличествоДокументовОбщее + " )" );
			//индикатор
			
			ИсточникАлкоКода = "sprnn";			// по умолчанию источником алкокода товара является справочник (на случай передачи не алкогольного документа)
			IF ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001", "002", "003", "008", "045", "046" ) )
				ИсточникАлкоКода = "spec";			//для прихода, расхода и инвентаризации ЕГАИС и прочих алкодокументов Алкокод берем из спецификации документа
				
			ДОБАВИТЬКОНТЕКСТ( "SELECT 
									sprnn.maincode, 
									spec.ed,
									spec.nn,
									spec.nnname AS name, 
									spec.kolp,
									" + ЕСЛИ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "007", "045" ), "spec.kolp_real", ЕСЛИ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001" ), "spec.realkolp", "0" ) ) + " AS realkolp,
									spec.cena, 
									dbo.fn_getbarcodes_ex( sprnn.nn ) AS barcodes, 
									sprnn.code AS Артикул, 
									sprnn.nnvid AS nnvid, 
									sprnn.d_litr AS d_litr, 
									sprnn.edd_litr AS ЕдиницаОбъема, 
									sprnn.weight AS Вес, 
									sprnn.a_proc AS Крепость, 
									" + ИсточникАлкоКода + ".alcocode AS Алкокод, 
									sprnn.importer AS Производитель,
									'' AS ПроизводительИмя,
									'' AS ПроизводительИНН,
									'' AS ПроизводительКПП,
									" + ЕСЛИ(ПУСТО(СКЛАД), "0", "dbo.fn_calcsklad( spec.nn, '', '" + СКЛАД + "', '001', '' )") + " AS Остаток,
									spec.ic AS spec_ic, 
									spec.identity_column, 
									ISNULL((SELECT TOP 1 boxnumber FROM barcodes bc WHERE bc.code = '" + ВыгружаемыеДокументы.code + "' AND bc.ic = spec.ic AND bc.spec_ic = spec.identity_column), '') AS boxnumber,
									sprnn.f_mark AS f_mark, 
									sprnn.markgroup AS markgroup,
									sprnn.gtin AS gtin,
									dbo.fn_alcotype(sprnn.nnvid) AS alcotype,
									spectree.uniqueid AS uniqueid
								FROM spec" + ВыгружаемыеДокументы.code + " spec									
								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn
								INNER JOIN spectree spectree ON spectree.ic = sprnn.identity_column AND spectree.objtype = 'SPR' AND ( spectree.objcode = 'S02' OR spectree.objcode = 'S05' AND spectree.folder = 0 )
								WHERE spec.ic = " + ВыгружаемыеДокументы.ic, "Спецификация" );
				
			ВЫБРАТЬКОНТЕКСТ( "Спецификация" );
			num = 1;
			СписокМарок = "";
			СписокАлкокодов = "";			
			WHILE ( !КОНЕЦКОНТЕКСТА( "Спецификация" ) )
			{
				ДОБАВИТЬКОНТЕКСТ("SELECT barcode, boxnumber FROM barcodes WHERE ic = '" + Спецификация.spec_ic + "' AND spec_ic = '" + Спецификация.identity_column + "'", "Марки");
				
				//сформируем список марок и алкокодов
				
				IF ( КОЛИЧЕСТВОСТРОК("Марки") > 0 )
				{					
					WHILE (!КОНЕЦКОНТЕКСТА("Марки"))
					{
						СписокМарок += ЕСЛИ( !ПУСТО( СписокМарок ), ",", "") + Марки.barcode;
						СписокАлкокодов += ЕСЛИ( !ПУСТО( СписокАлкокодов ), ",", "") + Спецификация.Алкокод;						
						ПРОПУСТИТЬ( 1, "Марки" );
					}
					УДАЛИТЬКОНТЕКСТ( "Марки" );	
					ВЫБРАТЬКОНТЕКСТ("Спецификация");
				}
				
				ПРОПУСТИТЬ( 1, "Спецификация" );
			}
			УДАЛИТЬКОНТЕКСТ( "Спецификация" );		
			
			IF ( !ПУСТО( СписокМарок ) AND !ПУСТО( СписокАлкокодов ) )
			{				
				//формирование структуры для выгрузки
				ТекстЗапроса = "";
				ТекстЗапроса += "{"; 
				ТекстЗапроса += """numbers"": [""" + STRTRAN(СписокМарок,",",""",""") + """]" + ",";
				ТекстЗапроса += """alc_codes"": [""" + STRTRAN(СписокАлкокодов,",",""",""") + """]";
				
				//описание транзакции
				УстанавливаемыйСтатусМарки = "unlock";
				IF ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "002", "003", "008", "046" ) )
					УстанавливаемыйСтатусМарки = "lock";
				
				СтатусМарки = """state"":""" + УстанавливаемыйСтатусМарки + """";
				ДействиеСМаркой = """action"":""horse""";
				ПОС = """pos"":""itida""";
				Смена = """shift"":""0""";
				Документ = """document"":""""";
				Пользователь = """user"":""itida""";
				Комментарий = """note"":""" + ПЕРЕКОДИРОВАТЬ( ОписаниеДокумента, "ANSI", "UTF-8") + """";
				
				//добавим описание транзакции в структуру
				ТекстЗапроса += ",";
				ТекстЗапроса += """transaction"": {" + СтатусМарки + "," + ДействиеСМаркой + "," + ПОС + "," + Смена + "," + Документ + "," + Пользователь + "," + Комментарий + "}";
				ТекстЗапроса += "}"; 
				
				ТОКЕН = RESTAPI.ALCOUNIT_Авторизация( АдресСервера, ЛОГИН, ПАРОЛЬ, КОДОБОРУДОВАНИЯ );
				Ответ = RESTAPI.ALCOUNIT_POSTЗАПРОС( АдресСервера, "/excise_stamp", ТекстЗапроса, ТОКЕН, "" );				
					
				ТекстЗапроса = "";
				IF ( !ПУСТО( Ответ ) )
				{
					ЗАГРУЗИТЬJSON("НезагруженныеМарки", Ответ, "Марка" );
					IF ( КОЛИЧЕСТВОСТРОК( "НезагруженныеМарки" ) > 0 )
					{
						СообщениеСМарками = "";
						СимвПС = CHR(13) + CHR(10);
						WHILE( !КОНЕЦКОНТЕКСТА( "НезагруженныеМарки" ) )
						{
							СообщениеСМарками += НезагруженныеМарки.Марка + СимвПС;
							ПРОПУСТИТЬ( 1, "НезагруженныеМарки" );
						}
						IF ( !ПУСТО( СообщениеСМарками ) )
						{
							СООБЩЕНИЕ(	"Следующие марки не были загружены в AlcoUnit: " + СимвПС + 
										СообщениеСМарками, "AlcoUnit");
						}
					}
				}
			}
			
			ВЫБРАТЬКОНТЕКСТ("ВыгружаемыеДокументы");						
			ПРОПУСТИТЬ( 1, "ВыгружаемыеДокументы");
		}
		УДАЛИТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
		//сбрасываем индикатор
		ИНДИКАТОР( );
	}
}
RETURN true;
