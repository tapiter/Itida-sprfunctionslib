// Токены авторизации храним в контексте из трех полей КодОборудования, Токен, ВремяАвторизации
IF ( !ВЫБРАТЬКОНТЕКСТ( "ТокеныАлкоюнит" ) )
	IF ( !ДОБАВИТЬКОНТЕКСТ( "LOCAL: Предприятие char, Токен char, ВремяАвторизации int", "ТокеныАлкоюнит" ) ) RETURN "";

ВЫБРАТЬКОНТЕКСТ( "ТокеныАлкоюнит" );
ПЕРЕЙТИВНАЧАЛО( "ТокеныАлкоюнит" );
НАШЛИ			= false;
_ERRORCODE		= 0;
ПРОДЛЕВАЕМТОКЕН = false;
ТекущаяДатаВремя = RESTAPI.GetUnixTime("");

WHILE ( !КОНЕЦКОНТЕКСТА( "ТокеныАлкоюнит" ) && !НАШЛИ )
{
	Нашли		= UPPER( ALLTRIM( ТокеныАлкоюнит.Предприятие ) ) == КОДОБОРУДОВАНИЯ;
	IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "ТокеныАлкоюнит" );
}
IF ( !НАШЛИ )
{
	ДОБАВИТЬСТРОКИ( 1, "ТокеныАлкоюнит" );
	ИЗМЕНИТЬПОЛЕ( "ТокеныАлкоюнит", "Предприятие", КОДОБОРУДОВАНИЯ );
}
ELSE IF ( ( ТекущаяДатаВремя - ТокеныАлкоюнит.ВремяАвторизации ) < 0 && !ПУСТО( ТокеныАлкоюнит.Токен ) )
{
	RETURN ТокеныАлкоюнит.Токен;
}
ELSE IF ( ( ТекущаяДатаВремя - ТокеныАлкоюнит.ВремяАвторизации ) >= 0 && !ПУСТО( ТокеныАлкоюнит.Токен ) ) 
{
	ПРОДЛЕВАЕМТОКЕН = true;
}

АлкоюнитТокен = "";
ТокенИстекает = ТекущаяДатаВремя;
АдресРесурса = "/token";

IF ( !ПРОДЛЕВАЕМТОКЕН )
{
	//формируем строку для аутентификации
	ХешЛогинПароль = MD5(ЛОГИН + ":" + Пароль, "S");
	СтрокаАутентификации = ПЕРЕКОДИРОВАТЬ("{""id"": """ + ЛОГИН + """, ""password"": """ + ХешЛогинПароль + """}", "", "BASE64");
	
	Заголовки[0] = "Authorization: Direct " + СтрокаАутентификации;
}

try
{
	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	
	Ответ				= ПЕРЕКОДИРОВАТЬ( RESTAPI.ALCOUNIT_GETЗАПРОС( АдресСервера, АдресРесурса, "", ЕСЛИ( ПРОДЛЕВАЕМТОКЕН, ТокеныАлкоюнит.Токен, ""), ЕСЛИ( ПРОДЛЕВАЕМТОКЕН, "", "Заголовки") ), "UTF-8", "ANSI" );
	
	IF ( !RESTAPI.ALCOUNIT_ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );
	//проверим поле наличие обязательного поля в ответе, чтобы понимать что получили то что требуется.
	//проверять бужем по полю signature (можно по: id,name,role,expired)
	ЗАГРУЗИТЬJSON( "Авторизация", Ответ );
	if ( ТИП( "Авторизация.signature" ) != "C" ) THROW( ТекстОшибки + Ответ );
	
	ТокенИстекает	= VAL(Авторизация.expired);
	АлкоюнитТокен	= ПЕРЕКОДИРОВАТЬ( Ответ, "", "base64" );
}
catch ( ТекстСообщения )
{
	СООБЩЕНИЕ( ТекстСообщения );
	ИЗМЕНИТЬПОЛЕ( "ТокеныАлкоюнит", "Токен", "" );
	RETURN "";
}

//запишем токен и время авторизации в контекст с токеном
ИЗМЕНИТЬПОЛЕ( "ТокеныАлкоюнит", "Токен", АлкоюнитТокен );
ИЗМЕНИТЬПОЛЕ( "ТокеныАлкоюнит", "ВремяАвторизации", ТокенИстекает );
	
RETURN ТокеныАлкоюнит.Токен;
