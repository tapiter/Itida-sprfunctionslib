ВыгруженоДокументов = 0;
//Выгрузка документов
IF ( !ПУСТО( КОДДОКУМЕНТА ) OR !ПУСТО( СПИСОКДОКУМЕНТОВ ) ) 
{
	IF ( !ПУСТО( КОДДОКУМЕНТА ) AND !ПУСТО( ИДДОКУМЕНТА ) )
		ДОБАВИТЬКОНТЕКСТ( "SELECT DB_NAME( ) AS dbase, '" + КОДДОКУМЕНТА + "' AS code, " + ИДДОКУМЕНТА + " AS ic", "ВыгружаемыеДокументы", 1 );			
	ELSE IF ( !ПУСТО( СПИСОКДОКУМЕНТОВ ) )
	{
		ДОБАВИТЬКОНТЕКСТ( "SELECT dbase, code, ic FROM " + СПИСОКДОКУМЕНТОВ, "ВыгружаемыеДокументы", 1 );	
		//очищаем список документов, чтобы не выгрузить повторно один и тот же список несколько раз
		СПИСОКДОКУМЕНТОВ = "";
	}	
		
	ВЫБРАТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
	КоличествоДокументовОбщее = КОЛИЧЕСТВОСТРОК("ВыгружаемыеДокументы");
	КоличествоДокументов = 0;
	ИНДИКАТОР("Формирование списка документов для выгрузки", КоличествоДокументовОбщее);
	ПЕРЕЙТИВНАЧАЛО( "ВыгружаемыеДокументы" );	
	WHILE ( !КОНЕЦКОНТЕКСТА( "ВыгружаемыеДокументы" ) )
	{
		//индикатор
		КоличествоДокументов++;
		Индикатор( КоличествоДокументов, " Выгрузка документа ( " + КоличествоДокументов + " из " + КоличествоДокументовОбщее + " )" );
		//индикатор
		
		ОбъектДокумента = "";
		IF ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001", "002", "005", "007", "019", "045", "055", "MRK" ) )
		{
			АлкоДок = false;
			НаименованиеДокумента = "";
						
			IF (ВыгружаемыеДокументы.code == "MRK")
			{
				ДОБАВИТЬКОНТЕКСТ( "SELECT guid, ndok, date, vendorname AS supplier, '' AS customer, '' AS PriceCategory 
									FROM mark_in 
									WHERE identity_column= "  + ВыгружаемыеДокументы.ic, "ДокументМаркировки" );
				ВЫБРАТЬКОНТЕКСТ( "ДокументМаркировки" ); 
				ИДДок		= ДокументМаркировки.guid;
				НомерДок	= ДокументМаркировки.ndok;
				ДатаДок		= ДокументМаркировки.date;
				ПоставщикОтправитель = ДанныеДокумента.supplier;
				Получатель = ДанныеДокумента.customer;
				КатегорияЦены = ДанныеДокумента.PriceCategory;
				УДАЛИТЬКОНТЕКСТ( "ДокументМаркировки" );
				ВЫБРАТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
			}
			ELSE
			{
				ДОБАВИТЬКОНТЕКСТ( "SELECT s0.rid, s0.ndok, s0.date, s0.code, 
									CASE 
										WHEN s0.code IN ('001','055') THEN ISNULL((SELECT shortname FROM sprclient WHERE code = s0.client), '')
										WHEN s0.code = '019' THEN ISNULL((SELECT name FROM sprskl WHERE code = s0.sklad), '')
										ELSE '' 
									END AS supplier, 
									CASE 
										WHEN s0.code IN ('007', '045') THEN ISNULL((SELECT name FROM sprskl WHERE code = s0.sklad), '')
										WHEN s0.code = '002' THEN ISNULL((SELECT shortname FROM sprclient WHERE code = s0.client), '')
										WHEN s0.code = '019' THEN ISNULL((SELECT name FROM sprskl WHERE code = s0.sklad_d), '')
										ELSE '' 
									END AS customer,
									CASE
										WHEN s0.code = '005' THEN ISNULL( ( SELECT RTRIM(name) FROM sprccnames WHERE clev=(SELECT clev FROM spr005 WHERE identity_column=s0.ic) ),'')
										ELSE ''
									END AS PriceCategory
									FROM spr000 s0 
									WHERE s0.code= '"  + ВыгружаемыеДокументы.code + "' AND s0.ic= " + ВыгружаемыеДокументы.ic, "ДанныеДокумента" );
				ВЫБРАТЬКОНТЕКСТ( "ДанныеДокумента" );
				ИДДок 		= ДанныеДокумента.rid;	
				НомерДок	= ДанныеДокумента.ndok;
				ДатаДок		= ДанныеДокумента.date;
				ПоставщикОтправитель = ДанныеДокумента.supplier;
				Получатель = ДанныеДокумента.customer;
				КатегорияЦены = ДанныеДокумента.PriceCategory;
				УДАЛИТЬКОНТЕКСТ( "ДанныеДокумента" );
				ВЫБРАТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
			}
			
			ТипДокумента = "";						
			//определим тип документа в МаркСкан по типу документа в Айтиде
			ТипДокумента = RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( ВыгружаемыеДокументы.code );
			
			//\\ определили тип документа
			IF ( ПУСТО( ТипДокумента ) )
			{
				ОписаниеДокумента = ЗАПРОС("SELECT dbo.fn_getdocdescription('" + ВыгружаемыеДокументы.code + "'," + ВыгружаемыеДокументы.ic + ")");
				СООБЩЕНИЕ( "Для документа: """ + ОписаниеДокумента + """ не определен тип документа в ТСД. Выгрузка документа произведена не будет", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
				ПРОПУСТИТЬ( 1, "ВыгружаемыеДокументы" );
				CONTINUE;
			}
			
			ИсточникАлкоКода = "sprnn";			// по умолчанию источником алкокода товара является справочник (для документа инвентаризации)										
			IF ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001", "002", "003", "045" ) )
				ИсточникАлкоКода = "spec";			//для прихода, расхода и инвентаризации ЕГАИС Алкокод берем из спецификации документа
			
			ТэгТипДокумента = ДАННЫЕ_JSON( "type", ТипДокумента );			
			ЕстьКИ = false;
			ЕстьРеальноеКоличество = false;
			
			ТэгДокументИД = ДАННЫЕ_JSON( "id", ИДДок );
			ТэгДокументНомер = ДАННЫЕ_JSON("number", НомерДок );
			ТэгДокументДата = ДАННЫЕ_JSON("datetime", ДатаДок );			
			
			ТэгДокументОтправитель = "";
			IF ( !ПУСТО( ПоставщикОтправитель ) )
				ТэгДокументОтправитель = ДАННЫЕ_JSON("supplier", ПЕРЕКОДИРОВАТЬ( ПоставщикОтправитель, "ANSI", "UTF-8" ) );
				
			ТэгДокументПолучатель = "";
			IF ( !ПУСТО( Получатель ) )
				ТэгДокументПолучатель = ДАННЫЕ_JSON("customer", ПЕРЕКОДИРОВАТЬ( Получатель, "ANSI", "UTF-8" ) );
			
			ТэгНазваниеМестаХранения = "";
			ТэгАдресМестаХранения = "";
			IF ( ВыгружаемыеДокументы.code == "005" ) //Переоценка			
			{
				ТэгНазваниеМестаХранения = ДАННЫЕ_JSON("stockroom", ПЕРЕКОДИРОВАТЬ( КатегорияЦены, "ANSI", "UTF-8" ) );
				ТэгАдресМестаХранения = ДАННЫЕ_JSON("storage", ПЕРЕКОДИРОВАТЬ( "Магазин", "ANSI", "UTF-8" ) );
			}
						
						
			IF (ВыгружаемыеДокументы.code == "MRK")
			{
				ДОБАВИТЬКОНТЕКСТ( "SELECT DISTINCT 
										sprnn.maincode, 
										spec.ed, 
										spec.nn, 
										spec.name AS name,
										spec.kolp,
										spec.realkolp,
										spec.cena, 
										dbo.fn_getbarcodes_ex( spec.nn ) AS barcodes, 
										sprnn.code AS Артикул, 
										sprnn.nnvid AS nnvid, 
										sprnn.d_litr AS d_litr,
										sprnn.edd_litr AS ЕдиницаОбъема, 
										sprnn.weight AS Вес, 
										sprnn.a_proc AS Крепость, 
										sprnn.alcocode AS Алкокод, 
										sprnn.importer AS Производитель,
										spr.vendorname AS ПроизводительИмя, 
										spr.vendorinn AS ПроизводительИНН,
										spr.vendorkpp AS ПроизводительКПП, 
										" + ЕСЛИ(ПУСТО(СКЛАД), "0", "dbo.fn_calcsklad( spec.nn, '', '" + СКЛАД + "', '001', '' )") + " AS Остаток, 
										spec.ic AS spec_ic, 
										spec.identity_column, 
										'' AS boxnumber,
										sprnn.f_mark AS f_mark, 
										sprnn.markgroup AS markgroup, 
										spec.gtin AS gtin, 
										dbo.fn_alcotype(sprnn.nnvid) AS alcotype,
										spectree.uniqueid AS uniqueid
									FROM mark_in spr
									INNER JOIN mark_in_spec spec ON spr.identity_column = spec.ic
									INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn
									INNER JOIN spectree spectree ON spectree.ic = sprnn.identity_column AND spectree.objtype = 'SPR' AND ( spectree.objcode = 'S02' OR spectree.objcode = 'S05' AND spectree.folder = 0 )
									WHERE spr.identity_column = " + ВыгружаемыеДокументы.ic, "Спецификация" );
			}
			ELSE
			{
				ДОБАВИТЬКОНТЕКСТ( "SELECT 
										sprnn.maincode, 
										spec.ed,
										spec.nn,
										spec.nnname AS name, 
										spec.kolp,
										" + ЕСЛИ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "007", "045" ), "spec.kolp_real", ЕСЛИ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001" ), "spec.realkolp", "0" ) ) + " AS realkolp,
										spec.cena, 
										dbo.fn_getbarcodes_ex( sprnn.nn ) AS barcodes, 
										sprnn.code AS Артикул, 
										sprnn.nnvid AS nnvid, 
										sprnn.d_litr AS d_litr, 
										sprnn.edd_litr AS ЕдиницаОбъема, 
										sprnn.weight AS Вес, 
										sprnn.a_proc AS Крепость, 
										" + ИсточникАлкоКода + ".alcocode AS Алкокод, 
										sprnn.importer AS Производитель,
										'' AS ПроизводительИмя,
										'' AS ПроизводительИНН,
										'' AS ПроизводительКПП,
										" + ЕСЛИ(ПУСТО(СКЛАД), "0", "dbo.fn_calcsklad( spec.nn, '', '" + СКЛАД + "', '001', '' )") + " AS Остаток,
										spec.ic AS spec_ic, 
										spec.identity_column, 
										ISNULL((SELECT TOP 1 boxnumber FROM barcodes bc WHERE bc.code = '" + ВыгружаемыеДокументы.code + "' AND bc.ic = spec.ic AND bc.spec_ic = spec.identity_column), '') AS boxnumber,
										sprnn.f_mark AS f_mark, 
										sprnn.markgroup AS markgroup,
										sprnn.gtin AS gtin,
										dbo.fn_alcotype(sprnn.nnvid) AS alcotype,
										spectree.uniqueid AS uniqueid
									FROM spec" + ВыгружаемыеДокументы.code + " spec									
									INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn
									INNER JOIN spectree spectree ON spectree.ic = sprnn.identity_column AND spectree.objtype = 'SPR' AND ( spectree.objcode = 'S02' OR spectree.objcode = 'S05' AND spectree.folder = 0 )
									WHERE spec.ic = " + ВыгружаемыеДокументы.ic, "Спецификация" );				
			}
			
			ВЫБРАТЬКОНТЕКСТ( "Спецификация" );
			num = 1;
			СтрокиДокумента = "";			
			WHILE ( !КОНЕЦКОНТЕКСТА( "Спецификация" ) )
			{
				//определим основные тэги строки документа
				ТоварМаркированный = Спецификация.f_mark == 1 AND !ПУСТО( Спецификация.markgroup );
				ТегИДТовара = ДАННЫЕ_JSON("goodsid", Спецификация.uniqueid);
				ТэгТипТовара = ДАННЫЕ_JSON("goodstype", ЕСЛИ( ТоварМаркированный, "mark", "simple") );
				
				IF ( Спецификация.realkolp > 0 AND !ПЕРЕМЕННАЯ("_MARKSCAN_НЕВЫГРУЖАТЬРЕАЛЬНОЕКОЛИЧЕСТВО", false) AND ВыгружаемыеДокументы.code <> "001" )
				{
					ЕстьРеальноеКоличество = true;
					ТэгКоличествоРеальное = ДАННЫЕ_JSON("quantityreal", STR( Спецификация.realkolp, 16, 3) );
					IF ( Спецификация.kolp - Спецификация.realkolp > 0 )
						ТэгКоличество = ДАННЫЕ_JSON("quantity", STR( Спецификация.kolp - Спецификация.realkolp, 16, 3) );
					ELSE
						ТэгКоличество = ДАННЫЕ_JSON("quantity", STR( 0, 16, 3) );
				}
				ELSE
				{
					ТэгКоличествоРеальное = "";
					ТэгКоличество = ДАННЫЕ_JSON("quantity", STR( Спецификация.kolp, 16, 3) );
				}				
					
				ТэгНомерПозиции = ДАННЫЕ_JSON("id", num );
				ТэгЦенаПозиции = "";
				IF (ВыгружаемыеДокументы.code == "005") //переоценка
					ТэгЦенаПозиции = ДАННЫЕ_JSON("price", VAL( STR( 100 * Спецификация.cena, 16, 0 ) ) );
				num++;
				
				//определяем наличие марок в документе
				IF (ВыгружаемыеДокументы.code == "MRK")
				{
					ДОБАВИТЬКОНТЕКСТ("SELECT mark AS barcode, '' AS boxnumber FROM mark_in_marks WHERE ic = '" + ВыгружаемыеДокументы.ic + "' AND spec_ic = '" + Спецификация.identity_column + "'", "Марки");
					ИмяТэгаМарки = "sn";
				}
				ELSE
				{
					ДОБАВИТЬКОНТЕКСТ("SELECT barcode, boxnumber FROM barcodes WHERE ic = '" + Спецификация.spec_ic + "' AND spec_ic = '" + Спецификация.identity_column + "'", "Марки");
					ИмяТэгаМарки = "ci";
				}
				
				//сформируем список марок
				СписокМарок = "";
				IF ( КОЛИЧЕСТВОСТРОК("Марки") > 0 )
				{
					ЕстьКИ = true;					
					WHILE (!КОНЕЦКОНТЕКСТА("Марки"))
					{
						СписокМарок += ЕСЛИ( !ПУСТО( СписокМарок ), ",", "") + "{";
						СписокМарок += ДАННЫЕ_JSON( ИмяТэгаМарки, ПЕРЕКОДИРОВАТЬ( Марки.barcode, "ANSI", "BASE64") );
						СписокМарок += "}";
						
						ПРОПУСТИТЬ( 1, "Марки" );
					}
					УДАЛИТЬКОНТЕКСТ( "Марки" );	
					ВЫБРАТЬКОНТЕКСТ("Спецификация");
				}
				
				//соберем объект JSON позиции документа
				ПозицияДокумента = "{""row"":{";				
				ПозицияДокумента += ТэгНомерПозиции + ","; 
				
				IF ( !ПУСТО( ТэгЦенаПозиции ) )
					ПозицияДокумента += ТэгЦенаПозиции + ",";
					
				IF (ВыгружаемыеДокументы.code <> "005") //если не переоценка
				{
					ПозицияДокумента += ТэгТипТовара + ",";
					ПозицияДокумента += ТэгКоличество + ",";
					//IF ( !ПУСТО( ТэгКоличествоРеальное ) ) ПозицияДокумента += ТэгКоличествоРеальное + ","; 
				}
				ПозицияДокумента += ТегИДТовара;
				ПозицияДокумента += "}";
				
				/*
				IF ( !ПУСТО( ТэгКоличествоРеальное ) ) 
				{
					ПозицияДокумента += ",";
					ПозицияДокумента += """barcodes"": [";
					ПозицияДокумента += "{" + ТэгКоличествоРеальное + "}";
					ПозицияДокумента += "]";					
				}
				*/
				
				IF ( !ПУСТО( СписокМарок ) )
				{
					ПозицияДокумента += ",";
					ПозицияДокумента += """serials"": [";
					ПозицияДокумента += СписокМарок;
					ПозицияДокумента += "]";					
				}
				ПозицияДокумента += "}";
				
				СтрокиДокумента += ЕСЛИ( !ПУСТО( СтрокиДокумента ), ",", "") + ПозицияДокумента;
				
				ПРОПУСТИТЬ( 1, "Спецификация" );
			} //WHILE ( !КОНЕЦКОНТЕКСТА( "Спецификация" ) )
			УДАЛИТЬКОНТЕКСТ( "Спецификация" );
			
			ВЫБРАТЬКОНТЕКСТ("ВыгружаемыеДокументы");						
			
			//соберем объект JSON документа
			ОбъектДокумента += "{";
			ОбъектДокумента += ТэгТипДокумента + ",";
			
			ТэгПодтипДокумента = """subtype"": " + ЕСЛИ( ЕстьКИ, 1, 0);
			ОбъектДокумента += ТэгПодтипДокумента + ",";
			
			//реквизиты документа
			ОбъектДокумента += """cols"":{";
			ОбъектДокумента += ТэгДокументИД + ",";
			ОбъектДокумента += ТэгДокументНомер + ",";
			ОбъектДокумента += ТэгДокументДата;
			
			IF ( !ПУСТО( ТэгДокументОтправитель ) )
			{
				ОбъектДокумента += ",";
				ОбъектДокумента += ТэгДокументОтправитель;			
			}
			IF ( !ПУСТО( ТэгДокументПолучатель ) )
			{
				ОбъектДокумента += ",";
				ОбъектДокумента += ТэгДокументПолучатель;			
			}
			IF ( !ПУСТО( ТэгНазваниеМестаХранения ) )
			{
				ОбъектДокумента += ",";
				ОбъектДокумента += ТэгНазваниеМестаХранения;			
			}
			IF ( !ПУСТО( ТэгАдресМестаХранения ) )
			{
				ОбъектДокумента += ",";
				ОбъектДокумента += ТэгАдресМестаХранения;			
			}
			ОбъектДокумента += "}" + ",";
			
			//массив позиций
			ОбъектДокумента += """rows"": [";
			ОбъектДокумента += СтрокиДокумента;
			ОбъектДокумента += "]";
			ОбъектДокумента += "}";
			
			//отправить документ в МаркСкан	
			
			ИмяПакета = "1c-documents";	
			ИДПакета = УНИКАЛЬНОЕИМЯ();
			ОтправляемыйПакет = "{ ""document"": { ""name"": """ + ИмяПакета + """, ""protocol"": ""atolmsk"", ""barcodesymbol"": 0, ""details"": [" + ОбъектДокумента + "] } }";
			
			МАРКСКАН_Токен = RESTAPI.МАРКСКАН_ПолучитьТокен( RESTAPI.КОДОБОРУДОВАНИЯ() );
			IF ( ПУСТО(МАРКСКАН_Токен) )
				RETURN false;
			МАРКСКАН_Адрес = RESTAPI.ПолучитьАдресТСД( RESTAPI.КОДОБОРУДОВАНИЯ() );	
			IF ( ПУСТО(МАРКСКАН_Адрес) )
				RETURN false;

			ОТВЕТ = RESTAPI.МАРКСКАН_POSTЗАПРОС( МАРКСКАН_Адрес, "/v3/packet?token=" + МАРКСКАН_Токен + "&code=" + ИДПакета, ОтправляемыйПакет, "" );
			
			IF ( ОТВЕТ == false )
			{
				СООБЩЕНИЕ("Выгружено документов: " + ВыгруженоДокументов + " из " + КоличествоДокументовОбщее, RESTAPI.ИМЯОБОРУДОВАНИЯ() );
				RETURN false;
			}
			ВыгруженоДокументов += КоличествоДокументов;

		} //IF ( ВСПИСКЕ( ВыгружаемыеДокументы.code, "001", "002", "005", "007", "019", "045", "055", "MRK" ) )
		ELSE
		{
			ОписаниеДокумента = ЗАПРОС("SELECT dbo.fn_getdocdescription('" + ВыгружаемыеДокументы.code + "'," + ВыгружаемыеДокументы.ic + ")");
			СООБЩЕНИЕ( """" + ОписаниеДокумента + """ не подлежит выгрузке в АТОЛ Mark.Scan. Документ пропущен", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
		}
		
		ПРОПУСТИТЬ( 1, "ВыгружаемыеДокументы" );
		
	} //WHILE ( !КОНЕЦКОНТЕКСТА( "ВыгружаемыеДокументы" ) )	
	УДАЛИТЬКОНТЕКСТ( "ВыгружаемыеДокументы" );
	//сбрасываем индикатор
	ИНДИКАТОР( );
}

RETURN true;
