ТекстЧека = "";
ЗаголовокЧека = "";
ПозицииЧека = "";
БанковскиеПозицииЧека = "";
IF ( ФР.ПСАТОЛ_Ошибка( DriverPayCard.PrepareOnLineAuthorization( ) ) )
	RETURN false;
IF ( DriverPayCard.NeedReferenceNumber <> 0 AND ПУСТО( DriverPayCard.ReferenceNumber ) )
{
	// Запрашиваем значение реквизита Ссылочный номер
	ОТПРАВИТЬСООБЩЕНИЕ( _ГЛАВНОЕОКНОПРИЛОЖЕНИЯ, _СООБЩЕНИЕВЫПОЛНИТЬКОМАНДУ, "ЗАПРОСПАРАМЕТРОВ", "'ССЫЛОЧНЫЙНОМЕР'" );
	IF ( !_РЕЗУЛЬТАТВВОДАПАРАМЕТРОВ ) RETURN false;
	DriverPayCard.ReferenceNumber	= ССЫЛОЧНЫЙНОМЕР;
	// Повторно авторизуемся
	IF ( ФР.ПСАТОЛ_Ошибка( DriverPayCard.PrepareOnLineAuthorization( ) ) ) RETURN false;
	
	IF ( DriverPayCard.NeedReferenceNumber <> 0 AND ПУСТО( DriverPayCard.ReferenceNumber ) )
	{
		СООБЩЕНИЕ ( "Неверно указан номер ссылки для возврата." + CHR( 13 ) + "Прерываем авторизацию" );
		RETURN false;
	}
}
IF ( DriverPayCard.NeedReaderEntryDataTracks <> 0 )
{
	СООБЩЕНИЕ ( "Необходимо прочитать номер карты ридером магнитных карт." + CHR( 13 ) + "Прерываем авторизацию" );
	RETURN false;
}
IF ( DriverPayCard.NeedKeyboardEntryDataTracks <> 0 )
{
	СООБЩЕНИЕ ( "Необходимо ввести номер карты." + CHR( 13 ) + "Прерываем авторизацию" );
	RETURN false;
}
IF ( ТИП( "_МРППЕЧАТАТЬКЛИШЕНАСЛИПЕ" ) == "U" )
{
	_МРППЕЧАТАТЬКЛИШЕНАСЛИПЕ	= true;
}
DriverPayCard.ECRSessionNumber	= ПЕРЕМЕННАЯ( "НомерСменыККМ", 0 );
DriverPayCard.ECRReceiptNumber	= ПЕРЕМЕННАЯ( "НомерЧекаККМ", 0 );
DriverPayCard.CharLineLength 	= _КОЛИЧЕСТВОСИМВОЛОВЧЕКОВОЙЛЕНТЫ;
Результат 						= DriverPayCard.OnLineAuthorization();

IF ( ФР.ПСАТОЛ_Ошибка( Результат ) ) RETURN false;
	
IF ( ( Результат >= 0 ) OR ( Результат <= -10000 AND Результат > -11000 ) )
{
	//получаем слип-чек и добавляем в чек	
	НОМЕРССЫЛКИ = DriverPayCard.ReferenceNumber;
	
	//обработка ситуаций с Автоотменой и "Не оплачено"
	СтрокаНеявныхОшибокПС		= "АВТООТМЕНА,НЕ ОПЛАЧИВАТЬ";
	ЕстьНеявныеОшибкиПС			= false;
	
	СлипЧек = "";
	Ind 					= 0;
	WHILE ( Ind < DriverPayCard.TextCount )
	{
		DriverPayCard.TextIndex = Ind;
		IF (!ПУСТО( ALLTRIM( DriverPayCard.Text ) ) )
		{
			IF ( ATC( СтрокаНеявныхОшибокПС, UPPER( ALLTRIM( DriverPayCard.Text ) ) ) > 0 AND UPPER( ALLTRIM( DriverPayCard.Text ) )  <> "ОТМЕНА" )
			{
				ЕстьНеявныеОшибкиПС	= true;
			}
		}
		
		СлипЧек += DriverPayCard.Text + CHR(13) + CHR(10);
		Ind = Ind + 1;
	}
	
	КОЛИЧЕСТВОСЛИПОВ = ЗАПРОС("SELECT slipcount FROM sprequipment WHERE code = '" + КОДОБОРУДОВАНИЯ + "'");
		
	try
	{
		ЗАПРОС( "INSERT INTO paycardtrans ( equipment, owner, TransType, AuthCode, OperationType, Sum, CardNumber, 
										SlipNumber, TransDate, TransTime, MsgNumber, TerminalID, ReferenceNumber, ResponseCode, slip, slipcount, fr_code )
			 VALUES ( '"	+ КОДОБОРУДОВАНИЯ + "', '" 
							+ _UNCONFIRMEDID + "', '" 
							+ ТипЧека + "', '"
							+ DriverPayCard.AuthCode + "', " 							 
							+ DriverPayCard.OperationType + ", " 
							+ DriverPayCard.Sum + ", '" 
							+ DriverPayCard.CardNumber + "', " 
							+ DriverPayCard.SlipNumber + ", '" 
							+ DriverPayCard.TransDate + "', '" 
							+ DriverPayCard.TransTime + "', " 
							+ DriverPayCard.MsgNumber + ", '" 
							+ DriverPayCard.TerminalID + "', '" 
							+ НОМЕРССЫЛКИ + "', '" 
							+ DriverPayCard.ResponseCode + "', '" 
							+ STDF( СлипЧек ) + "', '"
							+ КОЛИЧЕСТВОСЛИПОВ + "', '" 
							+ ФРКОДОБОРУДОВАНИЯ + 
							"' )" );
	}
	catch()
	{
		СООБЩЕНИЕ("Ошибка сохранения банковской транзакции", ФР.ИМЯОБОРУДОВАНИЯ());
	}
	
	//печатаем сверку
	IF ( Сервис.РМККоманда( "ОБОРУДОВАНИЕ", "ФР" ) )
	{
		IF ( ATC(_ОБОРУДОВАНИЕ, ФРКОДОБОРУДОВАНИЯ ) > 0 )
			КОДОБОРУДОВАНИЯДЛЯПЕЧАТИ = ФРКОДОБОРУДОВАНИЯ;
		ELSE
			КОДОБОРУДОВАНИЯДЛЯПЕЧАТИ = ЛЕВСИМВ( _ОБОРУДОВАНИЕ, 3 );
		
		ТипОтчета = -1;		
		РезультатПечатиСлипа = Сервис.РМККоманда( "ВЫПОЛНИТЬКОМАНДУПРОФИЛЯ", КОДОБОРУДОВАНИЯДЛЯПЕЧАТИ + "|116|ЭтоБанковскийСлип=true" );
	}
							
}
IF ( ФР.ПСАТОЛ_Ошибка( Результат ) )
	RETURN false;

RETURN true;
