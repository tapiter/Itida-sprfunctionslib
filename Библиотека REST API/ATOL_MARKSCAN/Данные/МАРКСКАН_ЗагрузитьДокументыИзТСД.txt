//получение завершенных документов из ТСД
ЗагрузкаСтрогоПоДокументу = false;

//если переданы конкретные тип и ид документа, то загружать будем строго по ним, без возврата всех возможных вариантов документов заданного типа
IF ( !ПУСТО( КОДДОКУМЕНТА ) AND !ПУСТО( ИДЗАГРУЖАЕМОГОДОКУМЕНТА ) )
	ЗагрузкаСтрогоПоДокументу = true;
	
//если не передан код документа, то определяем из стандартного понятия тип документа, с которым работаем в данный момент
IF ( ПУСТО( КОДДОКУМЕНТА ) )
	КОДДОКУМЕНТА = @КодДокумента;

//если работа не из документа, то считаем что загружаем приход
IF ( ПУСТО( КОДДОКУМЕНТА ) )
	КОДДОКУМЕНТА = "001";
	
//если не передан ид документа для загрузки, то определяем из понятия
IF ( ПУСТО( ИДЗАГРУЖАЕМОГОДОКУМЕНТА ) )
	ИДВНУТРЕННИЙДОК = @ИДДокумента;
ELSE
	ИДВНУТРЕННИЙДОК = ИДЗАГРУЖАЕМОГОДОКУМЕНТА;

IF ( КОДДОКУМЕНТА == "MRK" )
	ИДДОКУМЕНТА = ЗАПРОС( "SELECT guid FROM mark_in WHERE identity_column= "  + ИДВНУТРЕННИЙДОК );
ELSE
	ИДДОКУМЕНТА = ЗАПРОС("SELECT rid FROM spr000 WHERE code = '" + КОДДОКУМЕНТА + "' AND mainic = '" + ИДВНУТРЕННИЙДОК + "'");	
	
//определим тип документа в МаркСкан по типу документа в Айтиде	
IF ( ПУСТО( КОДДОКУМЕНТА ) AND ПУСТО( ИДВНУТРЕННИЙДОК ) ) //Сбор штрихкодов
	ТипДокумента = RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( "BARCODE" );
ELSE
	ТипДокумента = RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( КОДДОКУМЕНТА );
	
IF ( ПУСТО( ТипДокумента ) )
{
	Сообщение("Тип загружаемого документа не определен, либо произведена попытка загрузить не поддерживаемый тип документа.", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
	СистемноеСообщение( );
	_ERROR							= true;	
	Return false;
}


//http://{{url}}:{{port}}/v3/documents?token={{token}}&state=completed&complete={{documentCompleteList}}&code={{documentIDList}}
МАРКСКАН_Токен = RESTAPI.МАРКСКАН_ПолучитьТокен( КОДОБОРУДОВАНИЯ );
IF ( ПУСТО(МАРКСКАН_Токен) )
	RETURN false;
МАРКСКАН_Адрес = RESTAPI.ПолучитьАдресТСД( КОДОБОРУДОВАНИЯ );	
IF ( ПУСТО(МАРКСКАН_Адрес) )
	RETURN false;
	
СписокСостоянийДокумента = "completed";
РезультатЗавершенияДокумента = "completed,error";
БазоваяСтрокаЗапроса = "/v3/documents?token=" + МАРКСКАН_Токен + "&state=" + СписокСостоянийДокумента + "&complete=" + РезультатЗавершенияДокумента;

IF ( ПУСТО( ИДДОКУМЕНТА ) AND ЗагрузкаСтрогоПоДокументу )
	RETURN false;

СтрокаЗапроса = БазоваяСтрокаЗапроса + ЕСЛИ( !ПУСТО( ИДДОКУМЕНТА ), "&code=" + ИДДОКУМЕНТА, "" );

ОТВЕТ = RESTAPI.МАРКСКАН_GETЗАПРОС( МАРКСКАН_Адрес, СтрокаЗапроса, "" );

//если ид документа не пустой и получили по нему не пустой ответ, то применяем алгоритм загрузки без выбора документа
IF ( !ПУСТО( ИДДОКУМЕНТА ) AND !ПУСТО( ОТВЕТ) AND !ЗагрузкаСтрогоПоДокументу )
	ЗагрузкаСтрогоПоДокументу = true;

//если нет ответа или ошибка при получении по конкретному ИД документа
IF ( ( ОТВЕТ == false OR ПУСТО( ОТВЕТ ) ) AND ПУСТО( ИДДОКУМЕНТА ) )
	RETURN false;
ELSE IF ( ( ОТВЕТ == false OR ПУСТО( ОТВЕТ ) ) AND ЗагрузкаСтрогоПоДокументу )
	RETURN false;
ELSE IF ( ( ОТВЕТ == false OR ПУСТО( ОТВЕТ ) ) AND !ПУСТО( ИДДОКУМЕНТА )  )
{
	ТипыЗапрашиваемыхДокументов = "";
	ТипыЗапрашиваемыхДокументов += ТипДокумента;
	//если запрашиваем любой документ, отличный от типа "Сбор штрихкодов", то добавим к типу запрашиваемых еще и "Сбор штрихкодов"
	IF ( ТипДокумента <> RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( "BARCODE" ) )
		ТипыЗапрашиваемыхДокументов += "," + RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( "BARCODE" );
	//если не получили ответ по определенному ИД документа, то попробуем запросить все документы подобного типа
	СтрокаЗапроса = БазоваяСтрокаЗапроса + "&type=" + ТипыЗапрашиваемыхДокументов;
	ОТВЕТ = RESTAPI.МАРКСКАН_GETЗАПРОС( МАРКСКАН_Адрес, СтрокаЗапроса, "" );
}

//если ответ пустой или ошибка при загрузке, то завершаем загрузку и возвращаем false
IF ( ОТВЕТ == false OR ПУСТО( ОТВЕТ ) )
	RETURN false;
	

//загрузим документы из полученного ответа в контекст
ДанныеИзТСД = ПОЛЕ_JSON( ОТВЕТ, "document", "");
JSON_ДокументыИзТСД = ПОЛЕ_JSON( ДанныеИзТСД, "details", "");
IF ( ПУСТО( JSON_ДокументыИзТСД ) )
	RETURN false;

ЗАГРУЗИТЬJSON( "ДокументыИзТСД", JSON_ДокументыИзТСД, "Документ" );
ВЫБРАТЬКОНТЕКСТ( "ДокументыИзТСД" );
КолВоДок = КОЛИЧЕСТВОСТРОК( "ДокументыИзТСД" );

IF ( КолВоДок == 0 )
{
	Сообщение("В ТСД не содержится завершенных документов с типом: " + ТипДокумента, RESTAPI.ИМЯОБОРУДОВАНИЯ() );
	СистемноеСообщение( );
	_ERROR							= true;
	RETURN false;
}

СписокДокументов = "";
IF (ВыбиратьДокументыДляЗагрузки AND !ЗагрузкаСтрогоПоДокументу)
{
	//определим список запрашиваемых параметров в окне с выбором документов
	СписокЗапрашиваемыхПараметров = "'МАРКСКАН_ВЫБОРДОКУМЕНТОВ'"; //по умолчнию запрашиваем выбор документа
	
	ТСДИмяВременнойТаблицы = "##_TSDdocstable";
	ЗАПРОС ("if object_id('tempdb.." + ТСДИмяВременнойТаблицы + "') is not null drop table " + ТСДИмяВременнойТаблицы + "");
	ЗАПРОС ("CREATE TABLE " + ТСДИмяВременнойТаблицы + " (code varchar(50), name varchar(150), date varchar(20), type varchar(20), status varchar(20))");
	
	WHILE ( !КОНЕЦКОНТЕКСТА( "ДокументыИзТСД" ) )
	{
		НомерПП					= НОМЕРСТРОКИ( "ДокументыИзТСД" );
		НазваниеДокументаТСД	= RESTAPI.МАРКСКАН_ПолучитьТипДокументаАйтида( ПОЛЕ_JSON( ДокументыИзТСД.Документ, "type", "") );
		ДанныеДокумента			= ПОЛЕ_JSON( ДокументыИзТСД.Документ, "cols", "");
		ИДДокументаТСД			= ПОЛЕ_JSON( ДанныеДокумента, "id", "");
		НомерДокументаТСД		= ПОЛЕ_JSON( ДанныеДокумента, "number", "");
		ДатаДокументаТСД		= CTOD( STRTRANC( ПОЛЕ_JSON( ДанныеДокумента, "datetime", ""), "-", "." ), 7);
		ПолноеИмяДокументаТСД	= НазваниеДокументаТСД + " № " + НомерДокументаТСД + " от " + ДатаДокументаТСД;
		СтатусЗавершенияТСД		= ПОЛЕ_JSON( ДанныеДокумента, "complete", "");
		
		//добавим данные во временную таблицу для выбора
		ЗАПРОС("INSERT INTO " + ТСДИмяВременнойТаблицы + " (code, name, date, type, status)
				VALUES ('" + ИДДокументаТСД + "','" + ПолноеИмяДокументаТСД + "','" + DTOC( ДатаДокументаТСД, 4 ) + "','" + НазваниеДокументаТСД + "','" + ЕСЛИ( СтатусЗавершенияТСД == "completed", "без расхождения", "с расхождениями") + "')");
		
		ПРОПУСТИТЬ( 1, "ДокументыИзТСД" );
	}
	
	ОТПРАВИТЬСООБЩЕНИЕ( _ГЛАВНОЕОКНОПРИЛОЖЕНИЯ, _СООБЩЕНИЕВЫПОЛНИТЬКОМАНДУ,"ЗАПРОСПАРАМЕТРОВ", СписокЗапрашиваемыхПараметров );
	IF ( !_РЕЗУЛЬТАТВВОДАПАРАМЕТРОВ )
	{
		СистемноеСообщение( );
		_ERROR							= true;
		RETURN false;
	}
	СписокДокументов = МАРКСКАН_ВЫБОРДОКУМЕНТОВ;
	ЗАПРОС("DROP TABLE " + ТСДИмяВременнойТаблицы );
}
ELSE IF ( ЗагрузкаСтрогоПоДокументу )
	СписокДокументов = ИДДОКУМЕНТА;
	
IF ( ПУСТО( СписокДокументов ) )
{
	Сообщение("Не определен список документов для загрузки из ТСД ", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
	СистемноеСообщение( );
	_ERROR							= true;
	RETURN false;
}	

ВЫБРАТЬКОНТЕКСТ( "ДокументыИзТСД" );
ПЕРЕЙТИВНАЧАЛО( "ДокументыИзТСД" );
WHILE ( !КОНЕЦКОНТЕКСТА( "ДокументыИзТСД" ) )
{
	ДанныеДокумента		= ПОЛЕ_JSON( ДокументыИзТСД.Документ, "cols", "");
	ИДДокументаТСД		= ПОЛЕ_JSON( ДанныеДокумента, "id", "");
	ДатаДокументаТСД	= CTOD( STRTRANC( ПОЛЕ_JSON( ДанныеДокумента, "datetime", ""), "-", "." ), 7);
	
	//если есть список отмеченных для загрузки документов
	IF ( !ПУСТО( СписокДокументов) )
	{
		//проверяем наличие текущего документа в отмеченных
		IF ( ATC( СписокДокументов, ИДДокументаТСД) == 0 )
		{
			//если документ не выбран для загрузки, то пропускаем его в контексте
			ПРОПУСТИТЬ( 1, "ДокументыИзТСД" );
			CONTINUE;
		}
	}
	
	//выбираем строки документа
	JSONСтрокиДокумента = ПОЛЕ_JSON( ДокументыИзТСД.Документ, "rows", "");
	
	//если нет строк, то пропускаем такой документ
	IF ( ПУСТО( JSONСтрокиДокумента ) )
	{
		ПРОПУСТИТЬ( 1, "ДокументыИзТСД" );
		CONTINUE;
	}
	
	ЗАГРУЗИТЬJSON( "СтрокиДокумента", JSONСтрокиДокумента, "Строка" );
	ВЫБРАТЬКОНТЕКСТ( "СтрокиДокумента" );
	WHILE ( !КОНЕЦКОНТЕКСТА( "СтрокиДокумента" ) )
	{
		ДанныеСтроки				= ПОЛЕ_JSON( СтрокиДокумента.Строка, "row", "");
		ИДТовара					= ПОЛЕ_JSON( ДанныеСтроки, "goodsid", "");
		ТипТовара					= ПОЛЕ_JSON( ДанныеСтроки, "goodstype", "");
		
		Товар						= ЗАПРОС("SELECT nn FROM sprnn WHERE identity_column = ( SELECT ic FROM spectree WHERE uniqueid = '" + ИДТовара + "')");
		
		КоличествоТовара			= VAL( ПОЛЕ_JSON( ДанныеСтроки, "quantity", "") );
		КоличествоРеальное			= VAL( ПОЛЕ_JSON( ДанныеСтроки, "quantityreal", "") );
		ПризнакУдаленияСтроки		= ПОЛЕ_JSON( ДанныеСтроки, "isarchive", "");
		КомментарийСтроки			= ПОЛЕ_JSON( ДанныеСтроки, "comment", "");
		Цена						= 0;
		Сумма						= 0;
		Наименование				= "";
		
		JSONШтрихкодыСтроки = ПОЛЕ_JSON( СтрокиДокумента.Строка, "barcodes", "");
		IF ( !ПУСТО( JSONШтрихкодыСтроки ) )
			ЗАГРУЗИТЬJSON( "ШтрихкодыПозиции", JSONШтрихкодыСтроки, "ШтрихкодСтроки" );
		
		JSONКМСтроки = ПОЛЕ_JSON( СтрокиДокумента.Строка, "serials", "");
		IF ( !ПУСТО( JSONКМСтроки ) )
			ЗАГРУЗИТЬJSON( "ШтрихкодыПозиции", JSONКМСтроки, "ШтрихкодСтроки" );
				
		ВЫБРАТЬКОНТЕКСТ( "ШтрихкодыПозиции" );
		WHILE ( !КОНЕЦКОНТЕКСТА( "ШтрихкодыПозиции" ) )
		{
			ТипШтрихкода			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "bctype", ""); //тип штрихкода (есть в структурах "serials" и "barcodes")
			ШтрихКод				= "";
			//инициализация персональных переменных для структур с штрихкодами
			ШКПозиции 				= "";
			ФактическоеКоличество 	= "";
			СНКМПозиции				= "";
			GTINПозиции				= "";
			КИПозиции				= "";
			КМПолныйПозиции			= "";
			ТипМаркировки			= "";
			ПризнакУчетаКМ			= "";
			КМЧислитель				= "";
			КМЗнаменатель			= "";
			//конец инициализации персональных переменных для структур
						
			IF ( !ПУСТО( JSONШтрихкодыСтроки ) )
			{
				ШКПозиции			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "code", "");//в структуре "barcodes" - Значение штрихкода номенклатурной позиции в формате данных строки BASE64				
				ФактическоеКоличество = VAL( ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "quantityreal", "") ); //количество фактическое
			}
				
			IF ( !ПУСТО( JSONКМСтроки ) )	
			{
				ШКПозиции			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "code", ""); //в структуре "serials" - ШК, отсканированный при двухэтапном учете Обязателен только для алкоголя
				СНКМПозиции			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "sn", ""); //серийный номер КМ
				GTINПозиции			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "gtin", ""); //gtin
				КИПозиции			= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "ci", ""); //КИ маркированной позиции. Для алкоголя параметр не передается
				КМПолныйПозиции		= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "mark", ""); //Полное значение КМ маркированной позиции Для алкоголя параметр не передается
				ТипМаркировки		= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "goodsgroup", "");	//Признак принадлежности к товарной группе: 
																						//alco – алкоголь; 
																						//tobaccopiece – блок табачной продукции; 
																						//tobaccopack – пачка табачной продукции; 
																						//textiletireperfume – одежда или парфюм; 
																						//drugs – лекарства; 
																						//footwear – обувь; 
																						//photo – фотоаппараты и лампы-вспышки;
																						//milk – молочная продукция;
																						//jewelry - ювелирная продукция.
				
				ПризнакУчетаКМ		= ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "ismanual", "");	//Признак учета СН в документе: 1 – СН изначально был указан в документе; 2 – СН был добавлен в документ вручную на ТСД; 
				КМЧислитель			= VAL( ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "numerator", "") ); //Числитель. Параметр для долевого учета. Значение по умолчанию - 1
				КМЗнаменатель		= VAL( ПОЛЕ_JSON( ШтрихкодыПозиции.ШтрихкодСтроки, "denominator", "") ); //Знаменатель. Параметр для долевого учета. Значение по умолчанию - 1
				ФактическоеКоличество = 1;				
			}
			
			IF ( ТипТовара == "mark" )
			{
				IF ( ТипМаркировки == "alco" AND !ПУСТО( СНКМПозиции ) ) //маркированный алкоголь
					ШтрихКод		= СНКМПозиции;
				ELSE IF ( !ПУСТО( КМПолныйПозиции ) )
					ШтрихКод		= КМПолныйПозиции;
				ELSE IF ( !ПУСТО( КИПозиции ) )
					ШтрихКод		= КИПозиции;	
				ELSE IF ( !ПУСТО( СНКМПозиции + GTINПозиции ) )
					ШтрихКод		= СНКМПозиции + GTINПозиции;
			}
			ELSE IF ( ТипТовара == "alco" )
				ШтрихКод			= ШКПозиции;			
			ELSE IF ( ТипТовара == "simple" OR ПУСТО( ТипТовара ) )				
				ШтрихКод			= ЕСЛИ( !ПУСТО( ШКПозиции ), ПЕРЕКОДИРОВАТЬ( ШКПозиции, "BASE64", "ANSI" ), "" );
				
				
			//дополнительно определим данные, которые могут быть не заполнены
			IF ( ПУСТО( Товар ) AND !ПУСТО( ШтрихКод ) )
			{
				// Сначала надо попробовать распознать штриховой код по шаблону из справочника единиц измерения
				ДОБАВИТЬКОНТЕКСТ( "SELECT code, bctemplate 
									FROM spredn 
									WHERE bctemplate <> '' AND LEN( bctemplate ) = " + ДЛИНА( ШтрихКод ) + " AND
								( CHARINDEX( SUBSTRING( bctemplate, 1, 1 ), '0123456789' ) = 0 OR
								  ( CHARINDEX( SUBSTRING( bctemplate, 2, 1 ), '0123456789' ) = 0 AND 
									SUBSTRING( bctemplate, 1, 1 ) = '" + STDF( LEFT( ШтрихКод, 1 ) ) + "' ) OR
								  SUBSTRING( bctemplate, 1, 2 ) = '" + STDF( LEFT( ШтрихКод, 2 ) ) + "' )", "ШаблоныШК", 1 );
				WHILE ( !КОНЕЦКОНТЕКСТА( "ШаблоныШК" ) AND ПУСТО( Товар ) )
				{
					КодТовараИзШК	= "";
					АртикулИзШК		= "";
					КоличествоИзШК	= "";
					// Проверяем на значащие цифры, удовлетворяет ли наш штрих-код шаблону
					Шаблон			= ШаблоныШК.bctemplate;
					НеШтрихКод		= false;
					НомерСимвола	= 1;
					ДлинаШаблона	= ДЛИНА( Шаблон );
					WHILE( НомерСимвола < ДлинаШаблона )
					{
						IF ( AT( "АКМС", ПОДСТРОКА( Шаблон, НомерСимвола, 1 ) ) == 0 AND ПОДСТРОКА( Шаблон, НомерСимвола, 1 ) <> ПОДСТРОКА( ШтрихКод, НомерСимвола, 1 ) )
						НеШтрихКод		= true;
						НомерСимвола++;
					}
					IF ( НеШтрихКод )
					{
						ПРОПУСТИТЬ( 1, "ШаблоныШК" );
						CONTINUE;
					}
					НомерСимвола	= 1;
					WHILE( НомерСимвола < ДлинаШаблона )
					{
						Символ		= ПОДСТРОКА( Шаблон, НомерСимвола, 1 );
						СимволШК	= ПОДСТРОКА( ШтрихКод, НомерСимвола, 1 );
						IF ( Символ == "К" ) 
						КодТовараИзШК	+= СимволШК;
						ELSE IF ( Символ == "А" ) 
						АртикулИзШК		+= СимволШК;
						ELSE IF ( Символ == "М" )
						КоличествоИзШК	+= СимволШК;
						НомерСимвола++;
					}
					IF ( !ПУСТО( КодТовараИзШК ) OR !ПУСТО( АртикулИзШК ) )
					{
						Товар		= ЗАПРОС("SELECT code FROM sprres
											  WHERE " + ЕСЛИ( !ПУСТО( КодТовараИзШК )," maincode= '" + STDF( КодТовараИзШК ) + "'", 
																			  " a_code= = '" + STDF( АртикулИзШК ) + "'" ) );
					IF ( ПУСТО( ФактическоеКоличество ) )
						ФактическоеКоличество = VAL( КоличествоИзШК ) / 1000.00;
					}
					ПРОПУСТИТЬ( 1, "ШаблоныШК" );
				} //WHILE ( !КОНЕЦКОНТЕКСТА( "ШаблоныШК" ) AND ПУСТО( Товар ) )
				IF ( ПУСТО( Товар ) )
				{
					// Если не нашли подходящий шаблон или товар, то ищем в таблицах штриховых кодов
					ШтрихКод		= STDF( ШтрихКод );
					Товар			= ЗАПРОС("SELECT nn FROM sprnnbc WHERE bc= '" + ШтрихКод + "' 
											  UNION SELECT code FROM sprres_ed WHERE barcode= '" + ШтрихКод + "'
											  UNION SELECT nn FROM reg006  WHERE bc= '" + ШтрихКод + "'
											  UNION SELECT nn FROM reg009  WHERE bc= '" + ШтрихКод + "'" );
				} //IF ( ПУСТО( Товар ) )
			} //IF ( ПУСТО( Товар ) AND !ПУСТО( ШтрихКод ) )	
			IF ( !ПУСТО( Товар ) AND ПУСТО(Цена) )
			{
				IF ( КОДДОКУМЕНТА == "001" )
					Цена	= ЗАПРОС( "	SELECT TOP 1 cena
								FROM reg001
								WHERE nn= '" + Товар + "' AND account_= '001' AND priz= '+' AND
										( DATEDIFF( day, date, GETDATE( ) ) > 0 OR 
										( DATEDIFF( day, date, GETDATE( ) ) = 0 AND DATEDIFF( second, date, GETDATE( ) ) >= 0 ) ) AND sklad= '" + Склад + "' 
								ORDER BY date DESC, identity_column DESC " );
				ELSE
					Цена	= ЗАПРОС( "	SELECT dbo.fn_calcsklad_cena( '" + Товар + "', '', '" + Склад + "', '001' )" );
			} //IF ( !ПУСТО( Товар ) )
			IF ( !ПУСТО( Товар ) AND ПУСТО( Наименование ) ) Наименование	= ЗАПРОС( "SELECT name FROM sprres WHERE code = '" + Товар + "'" );
			
			Количество = ЕСЛИ( ПУСТО( ФактическоеКоличество ), КоличествоРеальное, ФактическоеКоличество );
			
			//добавляем строку во временную таблицу		
			ЗАПРОС( "INSERT INTO " + _ИМЯТАБЛИЦЫ + " ( doccode, docid, date, nn, nnname, kolp, cena, summa, barcode, firm, sklad, sklad_d )
						VALUES( '" + КОДДОКУМЕНТА + "', 
								" + ИДВНУТРЕННИЙДОК + ", 
								'" + ДатаДокументаТСД + "', 
								'" + Товар + "', 
								'" + STDF( Наименование )+ "', 
								" + STR( Количество, 16, 3 ) + ",
								" + STR( Цена, 16, 2 ) + ", 
								" + STR( ЕСЛИ(Сумма <> 0, Сумма, Цена * Количество), 16, 2 )  + ", 
								'" + ШтрихКод + "', 
								'" + Фирма + "', 
								'" + Склад + "', 
								'" + СкладПолучатель + "' )" );
			
			
			ПРОПУСТИТЬ( 1, "ШтрихкодыПозиции" );
		}
		УДАЛИТЬКОНТЕКСТ("ШтрихкодыПозиции");
		
		//возвращаемся к контексту строки документа
		ВЫБРАТЬКОНТЕКСТ( "СтрокиДокумента" );
		ПРОПУСТИТЬ( 1, "СтрокиДокумента");			
	}
	УДАЛИТЬКОНТЕКСТ("СтрокиДокумента");
	
	//возвращаемся к контексту документа
	ВЫБРАТЬКОНТЕКСТ( "ДокументыИзТСД" );
	
	IF ( ПРИЗНАКОЧИСТКИТСД == true )
	{
		RESTAPI.МАРКСКАН_УдалитьДокументИзТСД( КОДОБОРУДОВАНИЯ, ИДВНУТРЕННИЙДОК );
	}
	
	ПРОПУСТИТЬ( 1, "ДокументыИзТСД" );
}
//удаляем контекст с документами
УДАЛИТЬКОНТЕКСТ("ДокументыИзТСД");
RETURN true;
