
IF ( ПУСТО( СУФФИКС ) )	СУФФИКС	= "";

// Токены авторизации храним в контексте мз трех полей Предприятие, Токен, ВремяАвторизации
IF ( !ВЫБРАТЬКОНТЕКСТ( "ТокеныМаркировки" ) )
	IF ( !ДОБАВИТЬКОНТЕКСТ( "LOCAL: Предприятие char, Токен char, ВремяАвторизации int", "ТокеныМаркировки" ) ) RETURN "";
	
ВЫБРАТЬКОНТЕКСТ( "ТокеныМаркировки" );
ПЕРЕЙТИВНАЧАЛО( "ТокеныМаркировки" );
НАШЛИ			= false;
m_ПРЕДПРИЯТИЕ	= UPPER( ALLTRIM( m_ПРЕДПРИЯТИЕ ) );
WHILE ( !КОНЕЦКОНТЕКСТА( "ТокеныМаркировки" ) && !НАШЛИ )
{
	Нашли		= UPPER( ALLTRIM( ТокеныМаркировки.Предприятие ) ) == ( m_ПРЕДПРИЯТИЕ + СУФФИКС );
	IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "ТокеныМаркировки" );
}
IF ( !НАШЛИ )
{
	ДОБАВИТЬСТРОКИ( 1, "ТокеныМаркировки" );
	ИЗМЕНИТЬПОЛЕ( "ТокеныМаркировки", "Предприятие", ( m_ПРЕДПРИЯТИЕ + СУФФИКС ) );
}
ELSE IF ( ( TICKCOUNT( ) - ТокеныМаркировки.ВремяАвторизации ) < 100000 && !ПУСТО( ТокеныМаркировки.Токен ) ) RETURN ТокеныМаркировки.Токен;

IF ( СУФФИКС == "СУЗ" )
	ИДСОЕДИНЕНИЯ	= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CONNECTIONID" + m_ПРЕДПРИЯТИЕ + "'" );
ELSE
	ИДСОЕДИНЕНИЯ	= "";

мГруппаМаркировки	= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_GROUP" + m_ПРЕДПРИЯТИЕ + "'" );
// Авторизуемся
МАРКИРОВКАТОКЕН		= "";
// Для табака отдельный сервер маркировки
IF ( ВСПИСКЕ( мГруппаМаркировки, "tobacco" ) )
	АдресСервера 		= ЕСЛИ( ТестовыйКонтур, "https://markirovka.sandbox.crptech.ru", "https://markirovka.crpt.ru" );
ELSE
	АдресСервера 		= ЕСЛИ( ТестовыйКонтур, "https://sandbox.crptech.ru", "https://ismp.crpt.ru" );
	
Заголовки[ 0 ]		= "Content-Type: application/json";

try
{
	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, Маркировка.ФАЙЛЖУРНАЛА( ) );
	Ответ				= HTTPGET( Соединение, "/api/v3/auth/cert/key" );
	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );

	/* Ответ должен иметь вид
		{
			"uuid":"<GUID>",
			"data":"<RANDOM STRING>"
		}
	*/
	ЗАГРУЗИТЬJSON( "Авторизация", Ответ );
	if ( ТИП( "Авторизация.uuid" ) != "C" ) THROW( ТекстОшибки + Ответ );

	// Запрашиваем токен
	ШифрованныеДанные	= ШИФРОВАНИЕ( СЕРТИФИКАТ, Авторизация.data, 1, false, false, _МАРКИРОВКА_ХРАНИЛИЩЕСЕРТИФИКАТОВ );
	Ответ				= _ERRORDESCRIPTION;
	IF ( ПУСТО( ШифрованныеДанные ) ) THROW( Ответ );
	
	ШифрованныеДанные	= ПЕРЕКОДИРОВАТЬ( ШифрованныеДанные, "", "BASE64" );
	мЗапрос				= "{""uuid"":""" + Авторизация.uuid + """,""data"":""" + ШифрованныеДанные + """}";
	Ответ				= HTTPPOST( Соединение, "/api/v3/auth/cert/" + ИДСОЕДИНЕНИЯ, мЗапрос, "Заголовки" );
	
	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );

	ЗАГРУЗИТЬJSON( "Авторизация", Ответ );
	IF ( !ПУСТО( ЗНАЧЕНИЕПОЛЯ( "Авторизация", "error_message" ) ) ) THROW( ТекстОшибки + Авторизация.error_message );

	МАРКИРОВКАТОКЕН		= ЗНАЧЕНИЕПОЛЯ( "Авторизация", "token" );
}
catch ( ТекстСообщения )
{
	HTTPCLOSE( Соединение );
	СООБЩЕНИЕ( ТекстСообщения );
	ИЗМЕНИТЬПОЛЕ( "ТокеныМаркировки", "Токен", "" );
	RETURN "";
}
HTTPCLOSE( Соединение );

ИЗМЕНИТЬПОЛЕ( "ТокеныМаркировки", "Токен", МАРКИРОВКАТОКЕН );
ИЗМЕНИТЬПОЛЕ( "ТокеныМаркировки", "ВремяАвторизации", TICKCOUNT( ) );
RETURN МАРКИРОВКАТОКЕН;
